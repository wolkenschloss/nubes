# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Build

on:
  release:
    types: [created]
  pull_request:
    branches:
      - master
      - develop
      - release-*

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - id: login
        name: "Show Pull Request"
        run: |
          echo opened by ${{ github.event.pull_request.user.login }}.
          echo label ${{ github.event.label }}.
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: "Show Properties"
        run: |
          echo "GITHUB_REF $GITHUB_REF"
          echo "GITHUB_REF_NAME $GITHUB_REF_NAME"
          echo "GITHUB_SHA $GITHUB_SHA"
          echo "GITHUB_RUN_ID $GITHUB_RUN_ID"
          echo "GITHUB_RUN_NUMBER $GITHUB_RUN_NUMBER"
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Cache All
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.npm
          key: ${{ runner.os }}-all-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-all-
      - name: Build with Gradle
        run: ./gradlew build --project-prop vcs.commit=$GITHUB_SHA --project-prop vcs.ref=$GITHUB_REF
      - name: Cleanup Gradle Cache
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: testresult
          path: "**/build/reports"

    # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
    # the publishing section of your build.gradle
    #- name: Publish to GitHub Packages
    #  run: gradle publish
    #  env:
    #    USERNAME: ${{ github.actor }}
    #    TOKEN: ${{ secrets.GITHUB_TOKEN }}
